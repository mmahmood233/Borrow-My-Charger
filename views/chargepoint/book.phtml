<?php include 'views/includes/header.phtml'; ?>

<div class="container mt-4">
    <h1>Book Charge Point</h1>
    
    <?php if (!empty($view->error)): ?>
        <div class="alert alert-danger"><?php echo $view->error; ?></div>
    <?php endif; ?>
    
    <?php if (!empty($view->success)): ?>
        <div class="alert alert-success"><?php echo $view->success; ?></div>
    <?php endif; ?>
    
    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Charge Point Details</h5>
                </div>
                <div class="card-body">
                    <h6><?php echo htmlspecialchars($view->chargePoint['address']); ?></h6>
                    <p><strong>Price:</strong> Â£<?php echo $view->chargePoint['price']; ?> per kWh</p>
                    
                    <?php if ($view->chargePoint['image']): ?>
                        <img src="uploads/<?php echo $view->chargePoint['image']; ?>" class="img-fluid rounded mb-3" alt="Charge Point">
                    <?php endif; ?>
                    
                    <!-- Debug info for coordinates -->
                    <div class="small text-muted mb-2">
                        Location coordinates: <?php echo $view->chargePoint['latitude']; ?>, <?php echo $view->chargePoint['longitude']; ?>
                    </div>
                    
                    <div id="map" style="height: 300px; width: 100%; background-color: #eee;"
                         data-lat="<?php echo $view->chargePoint['latitude']; ?>"
                         data-lng="<?php echo $view->chargePoint['longitude']; ?>">
                    </div>
                    
                    <!-- Add custom script to ensure map centers on the charge point -->
                    <script>
                    document.addEventListener('DOMContentLoaded', function() {
                        // This will run after the page is fully loaded
                        console.log('Book page loaded, checking map coordinates');
                        setTimeout(function() {
                            const mapElement = document.getElementById('map');
                            if (mapElement) {
                                const lat = mapElement.getAttribute('data-lat');
                                const lng = mapElement.getAttribute('data-lng');
                                console.log('Map coordinates from attributes:', lat, lng);
                                
                                // Force map to center on these coordinates if map is initialized
                                if (window.map && lat && lng) {
                                    const position = { lat: parseFloat(lat), lng: parseFloat(lng) };
                                    console.log('Forcing map to center at:', position);
                                    window.map.setCenter(position);
                                    window.map.setZoom(15);
                                    
                                    // Add a marker if not already there
                                    new google.maps.Marker({
                                        position: position,
                                        map: window.map,
                                        title: "Charge Point Location",
                                        animation: google.maps.Animation.DROP
                                    });
                                }
                            }
                        }, 1000); // Wait 1 second after page load
                    });
                    </script>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5>Booking Form</h5>
                </div>
                <div class="card-body">
                    <?php if (empty($view->success)): ?>
                        <form action="book-chargepoint.php?id=<?php echo $view->chargePoint['id']; ?>" method="POST">
                            <div class="form-group">
                                <label for="booking_date">Date:</label>
                                <input type="date" id="booking_date" name="booking_date" class="form-control" required min="<?php echo date('Y-m-d'); ?>">
                            </div>
                            
                            <div class="form-group">
                                <label for="booking_time">Select a Time Slot:</label>
                                <select id="booking_time" name="booking_time" class="form-control" required disabled>
                                    <option value="">Please select a date first</option>
                                </select>
                                <small class="text-muted">Available time slots between 6:00 AM and 10:00 PM</small>
                            </div>
                            
                            <div id="availability-info" class="mt-3 mb-3" style="display: none;">
                                <h6>Availability for selected date:</h6>
                                <div id="availability-slots" class="d-flex flex-wrap">
                                    <!-- Time slots will be populated here -->
                                </div>
                                <div class="mt-2">
                                    <span class="badge badge-success mr-2">Available</span>
                                    <span class="badge badge-warning mr-2">Pending</span>
                                    <span class="badge badge-danger">Booked</span>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="message">Message to Homeowner (optional):</label>
                                <textarea id="message" name="message" class="form-control" rows="4" placeholder="Describe your vehicle, charging needs, etc."></textarea>
                            </div>
                            
                            <button type="submit" name="book_submit" class="btn btn-primary">Submit Booking Request</button>
                            <a href="chargepoints.php" class="btn btn-secondary">Back to Charge Points</a>
                        </form>
                    <?php else: ?>
                        <a href="user-dashboard.php" class="btn btn-primary">View My Bookings</a>
                        <a href="chargepoints.php" class="btn btn-secondary">Find More Charge Points</a>
                    <?php endif; ?>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
/* Time slot styling */
.time-slot-clickable {
    transition: all 0.2s ease;
    transform: scale(1);
}

.time-slot-clickable:hover {
    transform: scale(1.1);
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

.selected-time-slot {
    background-color: #28a745 !important;
    color: white !important;
    font-weight: bold;
    box-shadow: 0 2px 8px rgba(0,0,0,0.3);
    transform: scale(1.1);
}
</style>

<script>
$(document).ready(function() {
    // When date is selected, check availability
    $('#booking_date').on('change', function() {
        var selectedDate = $(this).val();
        if (selectedDate) {
            checkAvailability(selectedDate);
        } else {
            $('#availability-info').hide();
            // Disable and reset time dropdown
            $('#booking_time').prop('disabled', true).html('<option value="">Please select a date first</option>');
        }
    });
    
    // When dropdown selection changes, update the highlighted time slot
    $('#booking_time').on('change', function() {
        var selectedTime = $(this).val();
        // Remove highlight from all slots
        $('.time-slot-clickable').removeClass('selected-time-slot');
        // Add highlight to the matching slot
        $('.time-slot-clickable[data-time="' + selectedTime + '"]').addClass('selected-time-slot');
    });
    
    function checkAvailability(date) {
        $.ajax({
            url: 'check-availability.php',
            type: 'GET',
            data: {
                charge_point_id: <?php echo $view->chargePoint['id']; ?>,
                date: date
            },
            dataType: 'json',
            success: function(data) {
                if (data.error) {
                    console.error(data.error);
                    return;
                }
                
                // Show availability info
                $('#availability-info').show();
                
                // Clear previous slots
                $('#availability-slots').empty();
                
                // Create time slots from 6 AM to 10 PM
                var bookedTimes = {};
                
                // Mark booked and pending times
                if (data.bookings) {
                    data.bookings.forEach(function(booking) {
                        // Normalize time format to ensure consistent matching
                        var bookingTime = booking.booking_time;
                        console.log('Booking time from DB:', bookingTime, 'Status:', booking.status);
                        bookedTimes[bookingTime] = booking.status;
                    });
                }
                
                // Debug: log all booked times
                console.log('Booked times:', bookedTimes);
                
                // Reset time dropdown
                var timeSelect = $('#booking_time');
                timeSelect.html('<option value="">Select a time slot</option>');
                timeSelect.prop('disabled', false);
                
                // Generate time slots
                for (var hour = 6; hour <= 22; hour++) {
                    for (var minute of ['00', '30']) { // Add half-hour slots
                        // Format time string in the exact format used in the database (HH:MM)
                        var hourStr = hour < 10 ? '0' + hour : hour;
                        var timeStr = hourStr + ':' + minute;
                        var displayTime = formatDisplayTime(hour, minute);
                        
                        // Check if this time is booked
                        var status = 'available';
                        
                        // Check all possible time formats that might be in the database
                        if (bookedTimes[timeStr]) {
                            status = bookedTimes[timeStr];
                        } else if (bookedTimes[hour + ':' + minute]) {
                            status = bookedTimes[hour + ':' + minute];
                        }
                        
                        console.log('Checking time slot:', timeStr, 'Status:', status);
                        
                        var badgeClass = 'badge-success';
                        if (status === 'pending') {
                            badgeClass = 'badge-warning';
                        } else if (status === 'approved') {
                            badgeClass = 'badge-danger';
                        }
                        
                        // Add to visual display with click functionality for available slots
                        var slot = $('<div class="time-slot m-1">');
                        var badge = $('<span class="badge ' + badgeClass + ' p-2">').text(displayTime);
                        
                        // Make available slots clickable
                        if (status === 'available') {
                            badge.css('cursor', 'pointer');
                            badge.addClass('time-slot-clickable');
                            badge.attr('data-time', timeStr);
                            
                            // Add click handler
                            badge.on('click', function() {
                                var selectedTime = $(this).attr('data-time');
                                // Update dropdown
                                timeSelect.val(selectedTime);
                                
                                // Highlight the selected slot
                                $('.time-slot-clickable').removeClass('selected-time-slot');
                                $(this).addClass('selected-time-slot');
                            });
                        } else {
                            // Add tooltip for unavailable slots
                            badge.attr('title', 'This time slot is ' + status);
                        }
                        
                        slot.append(badge);
                        $('#availability-slots').append(slot);
                        
                        // Add to dropdown if available
                        if (status === 'available') {
                            timeSelect.append($('<option>', {
                                value: timeStr, // Always use the standardized format for the value
                                text: displayTime
                            }));
                        }
                    }
                }
                
                // If no available times
                if (timeSelect.find('option').length <= 1) {
                    timeSelect.append($('<option>', {
                        value: '',
                        text: 'No available time slots for this date',
                        disabled: true
                    }));
                }
            },
            error: function() {
                console.error('Error checking availability');
                $('#booking_time').prop('disabled', true).html('<option value="">Error loading time slots</option>');
            }
        });
    }
    
    // Helper function to format time for display
    function formatDisplayTime(hour, minute) {
        var period = hour >= 12 ? 'PM' : 'AM';
        var displayHour = hour > 12 ? hour - 12 : (hour === 0 ? 12 : hour);
        return displayHour + ':' + minute + ' ' + period;
    }
});
</script>

<?php include 'views/includes/footer.phtml'; ?>